x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - .env
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    PYTHONPATH: /opt/airflow/plugins
    AIRFLOW__WEBSERVER__SECRET_KEY: "05a6da0a62a1436ed2e7a8677d65c495"
  restart: on-failure
  volumes:
    - ./dags:/opt/airflow/dags
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - ./tests:/opt/airflow/tests
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: on-failure
    mem_limit: 512m

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        echo "Initializing Airflow DB..."
        /entrypoint airflow db migrate
        /entrypoint airflow users create \
          --username admin \
          --password admin \
          --firstname Kaushik \
          --lastname Shamantha \
          --role Admin \
          --email admin@example.com
    environment:
      <<: *airflow-common-env
    user: "0:0"
    restart: "no"

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres-db-volume:
